@model IEnumerable<BeastWorkout.Models.TrainingExercice>

@{
    ViewData["Title"] = "MyExercices";
}

<link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<div class="container main_container">
    <div class="row align-items-center justify-content-center">
        <div class="col-md-2 text-center"></div>
        <div class="col-md-8 text-center">
            @if (@Model.FirstOrDefault() != null)
            {
                <h1>@Model.FirstOrDefault().Training.Name</h1>
            }
            else
            {
                <h1>@ViewBag.training.Name</h1>
            }
        </div>
        <div class="col-md-2 text-center">
        </div>
    </div>

    <div class="container my-4 add_container mb-4">
        <div class="row align-items-center justify-content-center">
            <div class="col-md-4"></div>
            <div class="col-md-4 bg-custom">
                @if (@Model.FirstOrDefault() != null)
                {
                    <a class="nav-link text-white text-center" asp-action="AddNewExercice" asp-route-id_training="@Model.FirstOrDefault().Training.Id">Ajouter un exercice</a>
                }
                else
                {
                    <a class="nav-link text-white text-center" asp-action="AddNewExercice" asp-route-id_training="@ViewBag.training.Id">Ajouter un exercice</a>
                }
            </div>
            <div class="col-md-4"></div>
        </div>
    </div>

    <div class="container second_container">
        <div class="container training_container my-2 text-center bg-custom text-custom">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Id_exercice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Serie)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Reps)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Rest)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Weight)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Rpe)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Distance)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Time)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Exercice.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Serie)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Reps)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Rest)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Weight)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Rpe)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Distance)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Time)
                            </td>
                            <td>
                                <div class="d-flex align-items-center">
                                    <a class="nav-link me-2" href="@Url.Action("EditExercice", new { id_training = item.Id_training, id_exercice = item.Id_exercice })">
                                        <i class="bi bi-pencil-square"></i>
                                    </a>
                                    <span>|</span>
                                    <a class="delete_link ms-3" href="@Url.Action("DeleteExercice", new { id_training = item.Id_training, id_exercice = item.Id_exercice })" onclick="return confirmDelete(@item.Id_training, @item.Id_exercice);">
                                        <span class="bi bi-trash"></span>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

</div>

<div>
    <a href="javascript:history.back()">Back to Trainings</a>
</div>

<script>
    function confirmDelete(id_training, id_exercice) {
        if (confirm("Are you sure you want to delete this item?")) {
            window.location.href = '/ProgramBuilder/DeleteExercice?id_training=' + id_training + '&id_exercice=' + id_exercice;
        }
        return false;
    }
</script>
